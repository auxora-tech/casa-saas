# Generated by Django 5.2.3 on 2025-07-03 15:14

import phonenumber_field.modelfields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Participant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='media/profile_pictures/')),
                ('height', models.DecimalField(blank=True, decimal_places=2, max_digits=5, verbose_name='Height')),
                ('weight', models.DecimalField(blank=True, decimal_places=2, max_digits=5, verbose_name='Weight')),
                ('hair_colour', models.CharField(blank=True, max_length=50, verbose_name='Hair Colour')),
                ('eye_colour', models.CharField(blank=True, max_length=50, verbose_name='Eye Colour')),
                ('spoken_language', models.CharField(blank=True, max_length=100, verbose_name='Spoken Language')),
                ('distinguishing_features', models.TextField(blank=True, verbose_name='Distinguishing Features')),
                ('clothing_size', models.DecimalField(blank=True, decimal_places=2, max_digits=5, verbose_name='Clothing Size')),
                ('shoe_size', models.DecimalField(blank=True, decimal_places=2, max_digits=5, max_length=20, verbose_name='Shoe Size')),
                ('religion_or_culture', models.CharField(blank=True, max_length=100, verbose_name='Religion or Culture')),
                ('ndis_number', models.CharField(max_length=50, unique=True, verbose_name='NDIS Number')),
                ('ndis_plan_start', models.DateField(verbose_name='NDIS Plan Start')),
                ('ndis_plan_end', models.DateField(verbose_name='NDIS Plan End')),
                ('ndis_plan_managed_details', models.TextField(max_length=300, verbose_name='NDIS Plan Managed Details')),
                ('pension_type', models.CharField(blank=True, max_length=50, verbose_name='Pension Type')),
                ('pension_number', models.CharField(blank=True, max_length=50, verbose_name='Pension Number')),
                ('pension_expiry', models.DateField(blank=True, null=True, verbose_name='Pension Expiry')),
                ('private_insurance_type', models.CharField(blank=True, max_length=50, verbose_name='Private Insurance Type')),
                ('private_insurance_number', models.CharField(blank=True, max_length=50, verbose_name='Private Insurance Number')),
                ('private_insurance_expiry', models.DateField(blank=True, null=True, verbose_name='Private Insurance Expiry')),
                ('medicare_number', models.CharField(blank=True, max_length=50, verbose_name='Medicare Number')),
                ('medicare_expiry', models.DateField(blank=True, null=True, verbose_name='Medicare Expiry')),
                ('healthcare_card_number', models.CharField(blank=True, max_length=50, verbose_name='Healthcare Card Number')),
                ('healthcare_card_expiry', models.DateField(blank=True, null=True, verbose_name='Healthcare Card Expiry')),
                ('companion_card_number', models.CharField(blank=True, max_length=50, verbose_name='Companion Card Number')),
                ('companion_card_expiry', models.DateField(blank=True, null=True, verbose_name='Companion Card Expiry')),
                ('emergency_contact_1', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None, verbose_name='Emergency Contact 1')),
                ('emergency_contact_2', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None, verbose_name='Emergency Contact 2')),
                ('name_of_doctor', models.CharField(blank=True, max_length=50, verbose_name='Doctor Name')),
                ('medical_food_other_allergies', models.TextField(blank=True, max_length=500, verbose_name='Medical, Food or Other Allergies')),
                ('medical_condition', models.TextField(blank=True, max_length=500, verbose_name='Medical Condition')),
                ('dietary_requirements', models.TextField(blank=True, max_length=500, verbose_name='Dietary Requirements')),
                ('likes', models.TextField(blank=True, max_length=300, verbose_name='Likes')),
                ('dislikes', models.TextField(blank=True, max_length=300, verbose_name='Dislikes')),
                ('hobbies_interests', models.TextField(blank=True, max_length=300, verbose_name='Hobbies/Interests')),
                ('supports_required', models.TextField(blank=True, max_length=300, verbose_name='Supports Required')),
                ('level_assistance_required', models.TextField(blank=True, max_length=300, verbose_name='Leve of Assistance Required')),
                ('opg_guardian_consent_required', models.BooleanField(default=False, verbose_name='OPG/Guardian Consent Required')),
                ('opg_guardian_consent_required_details', models.TextField(blank=True, max_length=500, verbose_name='OPG/Guardian Consent Required Details')),
                ('public_trustee_or_financial_administrator', models.BooleanField(default=False, verbose_name='Public Trustee/Financial Administrator')),
                ('public_trustee_or_financial_administrator_details', models.TextField(blank=True, max_length=500, verbose_name='Public Trustee/Financial Administrator Details')),
                ('behaviour_management', models.BooleanField(default=False, verbose_name='Behaviour Management')),
                ('behaviour_management_details', models.TextField(blank=True, max_length=500, verbose_name='Behaviour Management Details')),
                ('restrictive_practices', models.BooleanField(default=False, verbose_name='Restrictive Practices')),
                ('restrictive_practices_details', models.TextField(blank=True, max_length=500, verbose_name='Restrictive Practices Details')),
                ('complex_health_support_plan', models.BooleanField(default=False, verbose_name='Complex Health Support Plan')),
                ('complex_health_support_plan_details', models.TextField(blank=True, max_length=500, verbose_name='Complex Health Support Plan Details')),
                ('unsupported_time', models.BooleanField(default=False, verbose_name='Unsupported Time')),
                ('unsupported_time_details', models.TextField(blank=True, max_length=300, verbose_name='Unsupported Time Details')),
                ('mobility', models.BooleanField(default=False, verbose_name='Mobility')),
                ('Mobility_details', models.TextField(blank=True, max_length=500, verbose_name='Mobility Details')),
                ('aids_equipment', models.BooleanField(default=False, verbose_name='Aids & Equipment')),
                ('aids_equipment_details', models.TextField(blank=True, max_length=500, verbose_name='Aids & Equipment Details')),
                ('communication', models.BooleanField(default=False, verbose_name='Communication')),
                ('communication_details', models.TextField(blank=True, max_length=500, verbose_name='Communication Details')),
                ('eating', models.BooleanField(default=False, verbose_name='Eating')),
                ('eating_details', models.TextField(blank=True, max_length=500, verbose_name='Eating Details')),
                ('menstrual_management', models.BooleanField(default=False, verbose_name='Menstrual Management')),
                ('menstrual_management_details', models.TextField(blank=True, max_length=500, verbose_name='Menstrual Management Details')),
                ('toileting', models.BooleanField(default=False, verbose_name='Toileting')),
                ('toileting_details', models.TextField(blank=True, max_length=500, verbose_name='Toileting Details')),
                ('getting_drinks', models.BooleanField(default=False, verbose_name='getting_drinks')),
                ('getting_drinks_details', models.TextField(blank=True, max_length=500, verbose_name='Getting Drinks Details')),
                ('food_preparation', models.BooleanField(default=False, verbose_name='Food Preparation')),
                ('food_preparation_details', models.TextField(blank=True, max_length=500, verbose_name='Food Preparation Details')),
                ('dressing', models.BooleanField(default=False, verbose_name='Dressing')),
                ('dressing_details', models.TextField(blank=True, max_length=500, verbose_name='Dressing Details')),
                ('showering_or_bathing', models.BooleanField(default=False, verbose_name='Showering/Bathing')),
                ('showering_or_bathing_details', models.TextField(blank=True, max_length=500, verbose_name='Showering/Bathing Details')),
                ('medication', models.BooleanField(default=False, verbose_name='Medication')),
                ('medication_details', models.TextField(blank=True, max_length=500, verbose_name='Medication Details')),
                ('friendships_or_relationships', models.BooleanField(default=False, verbose_name='Friendships/Relationships')),
                ('friendships_or_relationships_details', models.TextField(blank=True, max_length=500, verbose_name='Friendships/Relationships Details')),
                ('home_safety_and_security', models.BooleanField(default=False, verbose_name='Home Safety & Security')),
                ('home_safety_and_security_details', models.TextField(blank=True, max_length=500, verbose_name='Home Safety & Security Details')),
                ('community_access', models.BooleanField(default=False, verbose_name='Community Access')),
                ('community_access_details', models.TextField(blank=True, max_length=500, verbose_name='Community Access Details')),
                ('personal_or_road_safety', models.BooleanField(default=False, verbose_name='Personal/Road Safety')),
                ('personal_or_road_safety_details', models.TextField(blank=True, max_length=500, verbose_name='Personal/Road Safety Details')),
                ('transport_or_travel', models.BooleanField(default=False, verbose_name='Transport/Travel')),
                ('transport_or_travel_details', models.TextField(blank=True, max_length=500, verbose_name='Transport/Travel Details')),
                ('chores', models.BooleanField(default=False, verbose_name='Chores')),
                ('chores_details', models.TextField(blank=True, max_length=500, verbose_name='Chores Details')),
                ('hobbies_or_activities', models.BooleanField(default=False, verbose_name='Hobbies/Activities')),
                ('hobbies_or_activities_details', models.TextField(blank=True, max_length=500, verbose_name='Hobbies/Activities Details')),
                ('pet_care', models.BooleanField(default=False, verbose_name='Pet Care')),
                ('pet_care_details', models.TextField(blank=True, max_length=500, verbose_name='Pet Care Details')),
                ('handling_money_or_budgeting', models.BooleanField(default=False, verbose_name='Handling Money/Budgeting')),
                ('handling_money_or_budgeting_details', models.TextField(blank=True, max_length=500, verbose_name='Handling Money/Budgeting Details')),
                ('education_or_employment', models.BooleanField(default=False, verbose_name='Education/Employment')),
                ('education_or_employment_details', models.TextField(blank=True, max_length=500, verbose_name='Education/Employment Details')),
                ('learning_new_skills', models.BooleanField(default=False, verbose_name='Learning New Skills')),
                ('learning_new_skills_details', models.TextField(blank=True, max_length=500, verbose_name='Learning New Skills Details')),
                ('other_needs_and_support', models.BooleanField(default=False, verbose_name='Other Needs and Support')),
                ('other_needs_and_support_details', models.TextField(blank=True, max_length=500, verbose_name='Other Needs and Support Details')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_profile_completed', models.BooleanField(blank=True, default=False, verbose_name='Profile Completed')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
    ]
